<!--
   - Resin 3.0 configuration file.
  -->
<resin xmlns="http://caucho.com/ns/resin"
       xmlns:resin="http://caucho.com/ns/resin/core">
  <!--
     - Logging configuration for the JDK logging API.
    -->
    <log name="" level="info" path="/manduca/logs/admin/resin/info.log" timestamp="[%Y-%m-%d %H:%M:%S.%s]" />
    <log name="com.caucho.java" level="config" path="/manduca/logs/admin/resin/config.log" timestamp="[%Y-%m-%d %H:%M:%S.%s]" />
    <log name="com.caucho.loader" level="config" path="/manduca/logs/admin/resin/loader.log" timestamp="[%Y-%m-%d %H:%M:%S.%s]" />
  <!--
     - For production sites, change dependency-check-interval to something
     - like 600s, so it only checks for updates every 10 minutes.
    -->
  <dependency-check-interval>600s</dependency-check-interval>

  <!--
     - You can change the compiler to "javac" or jikes.
     - The default is "internal" only because it's the most
     - likely to be available.
    -->
  <javac compiler="internal" args="-g"/>

  <!-- Security providers.
     - <security-provider>
     -    com.sun.net.ssl.internal.ssl.Provider
     - </security-provider>
    -->

  <!--
     - Configures threads shared among all HTTP and SRUN ports.
    -->
  <thread-pool>
    <!-- Maximum number of threads. -->
    <thread-max>512</thread-max>

    <!-- Minimum number of spare connection threads. -->
    <spare-thread-min>100</spare-thread-min>
  </thread-pool>

  <!--
     - Configures the minimum free memory allowed before Resin
     - will force a restart.
    -->
  <min-free-memory>50M</min-free-memory>

  <server>
    <!-- adds all .jar files under the resin/lib directory -->
    <class-loader>
      <tree-loader path="${resin.home}/lib"/>
      <tree-loader path="${server.rootDir}/lib"/>
    </class-loader>

    <!-- Configures the keepalive -->
    <keepalive-max>500</keepalive-max>
    <keepalive-timeout>120s</keepalive-timeout>

    <!-- The http port -->
    <http server-id="" host="{{ip_app}}" port="{{port_app}}"/>



    <!--
       - Enables/disables exceptions when the browser closes a connection.
      -->
    <ignore-client-disconnect>true</ignore-client-disconnect>

    <!--
       - For security, use a different cookie for SSL sessions.
       - <ssl-session-cookie>SSL_JSESSIONID</ssl-session-cookie>
      -->

    <!--
       - Enables the cache (available in Resin Professional) 
      -->
    <resin:if test="${isResinProfessional}">
      <cache path="cache" memory-size="8M"/>
    </resin:if>

    <!--
       - Enables periodic checking of the server status.
       -
       - With JDK 1.5, this will ask the JDK to check for deadlocks.
       - All servers can add <url>s to be checked.
      -->
    <resin:if test="${isResinProfessional}">
      <ping>
        <!-- <url>http://localhost:8080/test-ping.jsp</url> -->
      </ping>
    </resin:if>

    <!--
       - Defaults applied to each web-app.
      -->
    <web-app-default>
    

      <!--
         - Extension library for common jar files.  The ext is safe
         - even for non-classloader aware jars.  The loaded classes
         - will be loaded separately for each web-app, i.e. the class
         - itself will be distinct.
        -->
      <class-loader>
        <tree-loader path="${server.rootDirectory}/ext-webapp"/>
        <compiling-loader path="WEB-INF/classes"/>
        <library-loader path="WEB-INF/lib"/>
      </class-loader>

      <database>
        <jndi-name>jdbc/content</jndi-name>
        <driver type="oracle.jdbc.driver.OracleDriver">
                <url>{{jdbc_content}}</url>
                <user>{{jdbc_user_admin}}</user>
                <password>{{jdbc_pass_admin}}</password>
        </driver>
        <prepared-statement-cache-size>15</prepared-statement-cache-size>
        <max-connections>50</max-connections>
        <max-idle-time>30s</max-idle-time>         
        <max-pool-time>10m</max-pool-time>
        <connection-wait-time>10s</connection-wait-time>
      </database>
    	<authenticator type='com.manduca.security.MD5JdbcAuthenticator'>
    		<init>
    			<data-source>jdbc/content</data-source>
    			<password-query>
    				SELECT password FROM reg_user WHERE email=?
    			</password-query>
    			<role-query>
	                SELECT ra.role_code
	                FROM
	                        reg_user u,
	                        reg_user_role ur,
	                        reg_role_ancestor ra
	                WHERE
	                        u.id = ur.user_id
	                        AND ur.role_code = ra.ancestor_code
	                        AND u.email = ?
				</role-query>
			</init>
		</authenticator>

      <!--
         - Sets timeout values for cacheable pages, e.g. static pages.
        -->
      <cache-mapping url-pattern="/" expires="5s"/>
      <cache-mapping url-pattern="*.gif" expires="3600s"/>
      <cache-mapping url-pattern="*.jpg" expires="3600s"/>

      <!--
         - Servlet to use for directory display.
        
      <servlet servlet-name="directory"
              servlet-class="com.caucho.servlets.DirectoryServlet"/>-->

      <!--
         - Enable EL expressions in Servlet and Filter init-param
        
      <allow-servlet-el/>-->

      <!--
         - For security, set the HttpOnly flag in cookies.
         - <cookie-http-only/>
        -->
    </web-app-default>

    <!--
       - Default host configuration applied to all virtual hosts.
      -->
    <host-default>
      <!--
         - With another web server, like Apache, this can be commented out
         - because the web server will log this information.
        -->
      

      <!-- creates the webapps directory for .war expansion -->
      <web-app-deploy path="webapps"/>

      <!-- creates the deploy directory for .ear expansion -->
      <ear-deploy path="deploy">
        <ear-default>
          <!-- Configure this for the ejb server
             -
             - <ejb-server>
             -   <config-directory>WEB-INF</config-directory>
             -   <data-source>jdbc/test</data-source>
             - </ejb-server>
            -->
        </ear-default>
      </ear-deploy>

      <!-- creates the deploy directory for .rar expansion -->
      <resource-deploy path="deploy"/>

      <!-- creates a second deploy directory for .war expansion -->
      <web-app-deploy path="deploy"/>
      

    </host-default>

    <!-- includes the web-app-default for default web-app behavior -->
    <resin:import path="${resinHome}/conf/app-default.xml"/>

    <!-- configures a deployment directory for virtual hosts -->
    <host-deploy path="hosts">
      <host-default>
        <resin:import path="host.xml" optional="true"/>
      </host-default>
    </host-deploy>

    <!-- configures the default host, matching any host name -->
	
    <host id="" root-directory="/local2/applications/">
          <web-app id="/deportes" document-directory="tournament/root">
          		<access-log path='/local2/applications/tournament/logs/access.log' format='%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i"' />
          		<stderr-log path='/local2/applications/tournament/logs/stderr.log' timestamp='[%Y-%m-%d %H:%M:%S.%s]' />
			<stdout-log path='/local2/applications/tournament/logs/stdout.log' timestamp='[%Y-%m-%d %H:%M:%S.%s]' />   
          </web-app>
          <web-app id="/encuesta" document-directory="poll/root">
                <access-log path='/local2/applications/poll/logs/access.log' format='%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i"' />
                <stderr-log path='/local2/applications/poll/logs/stderr.log' timestamp='[%Y-%m-%d %H:%M:%S.%s]' />
                <stdout-log path='/local2/applications/poll/logs/stdout.log' timestamp='[%Y-%m-%d %H:%M:%S.%s]' />
          </web-app>
          <web-app id="/registro" document-directory="registro/rootAdmin">
                <access-log path='/local2/applications/registro/logs/access.log' format='%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i"' />
                <stderr-log path='/local2/applications/registro/logs/stderr.log' timestamp='[%Y-%m-%d %H:%M:%S.%s]' />
                <stdout-log path='/local2/applications/registro/logs/stdout.log' timestamp='[%Y-%m-%d %H:%M:%S.%s]' />
          </web-app>
          <!-- web-app id="/concursos" document-directory="concursos/root">
                <access-log path='/manduca/logs/admin/concursos/access.log' format='%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i"' />
                <stderr-log path='/manduca/logs/admin/concursos/stderr.log' timestamp='[%Y-%m-%d %H:%M:%S.%s]' />
                <stdout-log path='/manduca/logs/admin/concursos/stdout.log' timestamp='[%Y-%m-%d %H:%M:%S.%s]' />
          </web-app -->
<!--
          <web-app id="/concursos" document-directory="concursos/root">
                <access-log path='/manduca/logs/admin/concursos/access.log' format='%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i"' />
                <stderr-log path='/manduca/logs/admin/concursos/stderr.log' timestamp='[%Y-%m-%d %H:%M:%S.%s]' />
                <stdout-log path='/manduca/logs/admin/concursos/stdout.log' timestamp='[%Y-%m-%d %H:%M:%S.%s]' />
          </web-app>          
--> 
<!--
         <web-app id="/eutv" document-directory="eutv/root">
                <access-log path='/manduca/logs/admin/eutv/access.log' format='%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i"' />
                <stderr-log path='/manduca/logs/admin/eutv/stderr.log' timestamp='[%Y-%m-%d %H:%M:%S.%s]' />
                <stdout-log path='/manduca/logs/admin/eutv/stdout.log' timestamp='[%Y-%m-%d %H:%M:%S.%s]' />
          </web-app> 
-->
    </host>
  </server>
</resin>
